/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.upnorte.talbd.nuevonorte.presentacion;

import edu.upnorte.talbd.nuevonorte.accesodatos.DAOPedido;
import edu.upnorte.talbd.nuevonorte.accesodatos.DAOProducto;
import edu.upnorte.talbd.nuevonorte.entidades.DetallePedido;
import edu.upnorte.talbd.nuevonorte.entidades.Pedido;
import edu.upnorte.talbd.nuevonorte.entidades.Producto;
import java.math.BigDecimal;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RegistrarPedido extends javax.swing.JInternalFrame {
    JDesktopPane dskPrincipal;
    List<Producto> listaProducto;
    
    public RegistrarPedido(JDesktopPane dskPrincipal) {
        initComponents();
        this.dskPrincipal = dskPrincipal;
        listaProducto = DAOProducto.getInstance().listar();
        mostrar();
        /*
        detalle.add(new modelTable("item1",1d,1d,1d));
        detalle.add(new modelTable("item1",1d,1d,1d));
        detalle.add(new modelTable("item1",1d,1d,1d));*/
        update_model();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedido = new javax.swing.JTable();
        txtFecha = new com.toedter.calendar.JDateChooser();
        btnRegistrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProducto = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Registrar Nuevo Pedido");

        jLabel2.setText("Fecha:");

        jLabel3.setText("Serie:");

        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nombre", "cant", "precio", "subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPedido);

        btnRegistrar.setText("Registrar Pedido");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        tblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblProducto);

        btnAgregar.setText("<<Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(btnRegistrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnAgregar)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(33, 33, 33)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addComponent(btnRegistrar)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        Pedido objPedido = new Pedido();
        
        objPedido.setFecha(txtFecha.getDate());
        objPedido.setSerie(txtSerie.getText());
        //objPedido.setTotal= detalle.get(row).subtotal;
       double total = 0;
       objPedido.setDetalle(new ArrayList<DetallePedido>());
       for (modelDetallePedidoTable model : detalle) {
            DetallePedido obj = new DetallePedido();
            obj.setCantidad(BigDecimal.valueOf(model.cantidad));
            obj.setSubtotal(BigDecimal.valueOf(model.subtotal));
            obj.setIdProducto(model.item);
            objPedido.getDetalle().add(obj);
            total+=model.subtotal;
        }
        objPedido.setTotal(BigDecimal.valueOf(total));
        
        DAOPedido.getInstance().registrar(objPedido);
        JOptionPane.showMessageDialog(this, "Pedido registrado!!!");
        this.dispose();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int index = tblProducto.getSelectedRow();
        if (index != -1){
            //fila seleccionada
            Producto objProducto = listaProducto.get(index);
            //RegistrarPedido ventana = new RegistrarPedido(objProducto,this);
            //tblPedido.add(ventana);
            //ventana.setVisible(true);
           detalle.add(new modelDetallePedidoTable(objProducto));
           update_model();
        }else{
            JOptionPane.showMessageDialog(this,"Se necesita seleccionar una fila!");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed
    public void mostrar(){
        //1. Traemos objetos
        listaProducto = DAOProducto.getInstance().listar();
        //2. Creamos modelo
        DefaultTableModel modelo = new DefaultTableModel();
        //3. Agregamos columnas al modelo
        modelo.addColumn("ID");
        modelo.addColumn("P. Costo");
        modelo.addColumn("P. Venta");
        modelo.addColumn("Fecha");
        modelo.addColumn("Categoria");
        
        //4. Agregamos filas al modelo
        for (Producto c : listaProducto){
            modelo.addRow(new Object[]{
                c.getId(),
                c.getPreciocosto(),
                c.getPrecioventa(),
                c.getFecha(),
                c.getIdCategoria().getNombre()
            });
        }
        //5. Asignamos el modelo a la tabla
        tblProducto.setModel(modelo);
    }
    
    public void update_model(){
        /*
        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"jjjjjjjjjjj",  new Double(98.0),  new Double(7698.0),  new Double(778798.0)},
                {"uuuuuuuu",  new Double(9.0),  new Double(800.0),  new Double(6789.0)},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "nombre", "cant", "precio", "subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });*/
        
        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            toCuerpo(),
            toHeader()
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

            @Override
            public void fireTableCellUpdated(int row, int column) {
                //super.fireTableCellUpdated(row, column); //To change body of generated methods, choose Tools | Templates.
                System.out.println("Llamo metodo");
                Double d = (Double)this.getValueAt(row, column);
                detalle.get(row).cantidad = d;
                detalle.get(row).subtotal = d*detalle.get(row).item.getPrecioventa().doubleValue();
                update_model();
            }
            
            
        });
    }
    //eljtable.getSelectionModel().addListSelectionListener(.....);
    public List<modelDetallePedidoTable> detalle = new ArrayList<modelDetallePedidoTable>();
    
    public class modelDetallePedidoTable{
    
        private Producto item;
        private Double cantidad=0d;
        private Double subtotal=0d;

        public modelDetallePedidoTable(Producto item) {
            this.item = item;
        }
        
        public Object [] toRow(){
            return new Object []{
                item.getId(), cantidad, item.getPrecioventa().doubleValue(), subtotal
            };
        }
        
    }
    
    public class modelTable{
    
        private String nombre;
        private Double cantidad;
        private Double precio;
        private Double subtotal;

        public modelTable(String nombre, Double cantidad, Double precio, Double subtotal) {
            this.nombre = nombre;
            this.cantidad = cantidad;
            this.precio = precio;
            this.subtotal = subtotal;
        }
        

        public String getNombre() {
            return nombre;
        }

        public void setNombre(String nombre) {
            this.nombre = nombre;
        }

        public Double getCantidad() {
            return cantidad;
        }

        public void setCantidad(Double cantidad) {
            this.cantidad = cantidad;
        }

        public Double getPrecio() {
            return precio;
        }

        public void setPrecio(Double precio) {
            this.precio = precio;
        }

        public Double getSubtotal() {
            return subtotal;
        }

        public void setSubtotal(Double subtotal) {
            this.subtotal = subtotal;
        }
        
        public Object [] toRow(){
            return new Object []{
                nombre, cantidad, precio, subtotal
            };
        }
    }
    
     public  String [] toHeader(){
            return new String [] {
                "nombre", "cant", "precio", "subtotal"
            };
        }
     
     public  Object [][] toCuerpo(){
         Object [][] rows = new Object[detalle.size()][4];
         int i=0;
         for (modelDetallePedidoTable deta : detalle) {
             rows[i++] = deta.toRow();
          }
            return rows;
        }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPedido;
    private javax.swing.JTable tblProducto;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables
}