/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.upnorte.talbd.nuevonorte.presentacion;

import edu.upnorte.talbd.nuevonorte.accesodatos.DAOAviso;
import edu.upnorte.talbd.nuevonorte.accesodatos.DAOBoleta;
import edu.upnorte.talbd.nuevonorte.accesodatos.DAOCliente;
import edu.upnorte.talbd.nuevonorte.accesodatos.DAOPedido;
import edu.upnorte.talbd.nuevonorte.entidades.Aviso;
import edu.upnorte.talbd.nuevonorte.entidades.Boleta;
import edu.upnorte.talbd.nuevonorte.entidades.Cliente;
import edu.upnorte.talbd.nuevonorte.entidades.Medida;
import edu.upnorte.talbd.nuevonorte.entidades.Pedido;
import edu.upnorte.talbd.nuevonorte.entidades.Total;
import edu.upnorte.talbd.nuevonorte.presentacion.RegistrarPedido.modelDetallePedidoTable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RegistrarBoleta extends javax.swing.JInternalFrame {
    JDesktopPane dskPrincipal;
    List<Aviso> listaAviso;
    List<Pedido> listaPedido;
    private List<Cliente> listaCliente;
    
    public RegistrarBoleta(JDesktopPane dskPrincipal) {
        initComponents();
        this.dskPrincipal = dskPrincipal;
        listaAviso = DAOAviso.getInstance().listar();
        listaPedido = DAOPedido.getInstance().listar();
        //Combo Box Cliente
        listaCliente = DAOCliente.getInstance().listar();
        DefaultComboBoxModel modeloComboBox = new DefaultComboBoxModel();
        for (Cliente objCliente : listaCliente){
            modeloComboBox.addElement(objCliente.getId() + "-" + objCliente.getNombrecom());
        }
        cmbCliente.setModel(modeloComboBox);
        
        mostrar();
        mostrar1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtIgv = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBoleta = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPedido = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAviso = new javax.swing.JTable();
        cmbCliente = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Registrar Boleta");
        setMaximumSize(new java.awt.Dimension(800, 708));
        setPreferredSize(new java.awt.Dimension(800, 708));

        jLabel1.setText("RUC empresa:");

        jLabel2.setText("Fecha:");

        jLabel3.setText("IGV:");

        txtIgv.setEditable(false);

        jLabel4.setText("ID Cliente:");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        tblBoleta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tipo", "Descripcion", "Precio", "Cantidad", "Sub Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBoleta);

        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Fecha", "Serie", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblPedido);

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(536, 536, 536)
                        .addComponent(jButton1)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pedido", jPanel2);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblAviso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Precio", "Fecha", "Medida", "Color", "Pagina", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAviso);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAgregar)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Aviso", jPanel1);

        cmbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Total:");

        txtTotal.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(btnRegistrar)))
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIgv, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIgv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(btnRegistrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        
        try{
            Boleta objBoleta = new Boleta();
            objBoleta.setRucemp(BigDecimal.valueOf(Double.valueOf(txtRuc.getText())));
            objBoleta.setFecha(txtFecha.getDate());
            objBoleta.setIgv(BigDecimal.valueOf(Double.valueOf(txtIgv.getText())));           
            objBoleta.setIdCliente(listaCliente.get(cmbCliente.getSelectedIndex()));
            
            for (modelAvisoTable avisoTable : tablas) {
                if(avisoTable.getItem1()== null)
                    objBoleta.getAvisos().add(avisoTable.getItem());
                else
                    objBoleta.getPedidos().add(avisoTable.getItem1());
            }
            
            /*DAOBoleta.getInstance().registrar(objBoleta);
            Boleta b = DAOBoleta.getInstance().traer(objBoleta);
            Total objTotal = new Total();
            objTotal.setTotal(BigDecimal.valueOf(Double.valueOf(txtTotal.getText())));
            */
            this.dispose();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int index = tblPedido.getSelectedRow();
        if (index != -1){
            //Modificamos la fila seleccionada
            Pedido objMedida = listaPedido.get(index);
            tablas.add(new modelAvisoTable(objMedida));
            mostrar2();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        int index = tblAviso.getSelectedRow();
        if (index != -1){
            //Modificamos la fila seleccionada
            Aviso objMedida = listaAviso.get(index);
            tablas.add(new modelAvisoTable(objMedida));
            mostrar2();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    public void mostrar(){
        //1. Traemos objetos
        listaAviso = DAOAviso.getInstance().listar();
        //2. Creamos modelo
        Object[][] lst = new Object [listaAviso.size()][7];
        int i =0;
        for (Aviso c : listaAviso){
            lst[i++] = (new Object[]{
                c.getId(),
                c.getPrecio(),
                c.getFecha(),
                c.getIdMedida().getNombre(),
                c.getIdColor().getNombre(),
                c.getIdPagina().getNombre(),
                c.getIdCategoria().getNombre()
            });
        }
        
        DefaultTableModel modelo =  new javax.swing.table.DefaultTableModel(
            lst,
            new String [] {
                "Codigo", "Precio", "Fecha", "Medida", "Color", "Pagina", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
            tblAviso.setModel(modelo);    
        /*
                
        //3. Agregamos columnas al modelo
        modelo.addColumn("ID");
        modelo.addColumn("Precio");
        modelo.addColumn("Fecha");
        modelo.addColumn("Medida");
        modelo.addColumn("Color");
        modelo.addColumn("Pagina");
        modelo.addColumn("Categoria");
        
        //4. Agregamos filas al modelo
        for (Aviso c : listaAviso){
            modelo.addRow(new Object[]{
                c.getId(),
                c.getPrecio(),
                c.getFecha(),
                c.getIdMedida().getNombre(),
                c.getIdColor().getNombre(),
                c.getIdPagina().getNombre(),
                c.getIdCategoria().getNombre()
            });
        }
        //5. Asignamos el modelo a la tabla
        tblAviso.setModel(modelo);
        */ 
    }
        
    public void mostrar1(){
        //1. Traemos objetos
        listaPedido = DAOPedido.getInstance().listar();
        Object[][] lst = new Object [listaPedido.size()][4];
        int i =0;
        for (Pedido c : listaPedido){
            lst[i++]= (new Object[]{
                c.getId(),
                c.getFecha(),
                c.getSerie(),
                c.getTotal()
            });
        }
        
        //2. Creamos modelo
        DefaultTableModel modelo = 
                new javax.swing.table.DefaultTableModel(
            lst,
            new String [] {
                "Codigo", "Fecha", "Serie", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        /*
        //3. Agregamos columnas al modelo
        modelo.addColumn("ID");
        modelo.addColumn("Fecha");
        modelo.addColumn("Serie");
        modelo.addColumn("Total");
        
        //4. Agregamos filas al modelo
        for (Pedido c : listaPedido){
            modelo.addRow(new Object[]{
                c.getId(),
                c.getFecha(),
                c.getSerie(),
                c.getTotal()
            });
        }
        */
        //5. Asignamos el modelo a la tabla
        tblPedido.setModel(modelo);
    }
    
    public void mostrar2(){
        //1. Traemos objetos
        Object[][] lst = new Object [tablas.size()][5];
        int i =0;
        int total =0 ,st = 0;
        for (modelAvisoTable c : tablas){
            lst[i++]= c.toRow();
            total += c.getPrecio();
        }
        
        txtIgv.setText(String.valueOf(total*0.18));
        
        txtTotal.setText(String.valueOf(total));
        //2. Creamos modelo
        DefaultTableModel modelo = 
                new javax.swing.table.DefaultTableModel(
            lst,
            new String [] {
                "Tipo", "Descripcion", "Precio", "Cantidad", "Sub Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        /*
        //3. Agregamos columnas al modelo
        modelo.addColumn("ID");
        modelo.addColumn("Fecha");
        modelo.addColumn("Serie");
        modelo.addColumn("Total");
        
        //4. Agregamos filas al modelo
        for (Pedido c : listaPedido){
            modelo.addRow(new Object[]{
                c.getId(),
                c.getFecha(),
                c.getSerie(),
                c.getTotal()
            });
        }
        */
        //5. Asignamos el modelo a la tabla
        tblBoleta.setModel(modelo);
    }
    
    public List<modelAvisoTable> tablas = new ArrayList<modelAvisoTable>();
    
    
    public class modelAvisoTable{
        private Aviso item = null;
        private Pedido item1  = null;

        public modelAvisoTable(Aviso item) {
            this.item = item;
        }
        
        public modelAvisoTable(Pedido item1) {
            this.item1 = item1;
        }
        
        public double getPrecio(){
            if(item!=null)
                return item.getPrecio().doubleValue();
            return item1.getTotal().doubleValue();
        }
        public Object [] toRow(){
            if(item!=null)
                return new Object []{
                    "Pedido", 
                    "Descripcion: " + item.getFecha() + item.getIdMedida().getId() +item.getIdColor().getId() ,
                    item.getPrecio().doubleValue(), 
                    1, 
                    item.getPrecio().doubleValue()
                };
             return new Object []{                
                    "Aviso", 
                    "Descripcion: " + item1.getSerie().toString() + item1.getFecha().getTime(),                     
                    item1.getTotal().doubleValue(),
                    1,
                    item1.getTotal().doubleValue()
            };
        }

        public Aviso getItem() {
            return item;
        }

        public void setItem(Aviso item) {
            this.item = item;
        }

        public Pedido getItem1() {
            return item1;
        }

        public void setItem1(Pedido item1) {
            this.item1 = item1;
        }
        
        
    }
    /*
    public class modelPedidoTable{
    
        private Pedido item;

        public modelPedidoTable(Pedido item) {
            this.item = item;
        }
        
        public Object [] toRow(){
            return new Object []{
                item.getId(), item.getSerie().toString(), item.getFecha().getTime(), item.getTotal().doubleValue()
            };
        }
    }
    */
    
    
    public void update_model(){
        
        tblPedido.setModel(new javax.swing.table.DefaultTableModel(toCuerpo(),toHeader()) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        tblAviso.setModel(new javax.swing.table.DefaultTableModel(toCuerpo(),toHeader()) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        
    }
    
    public  String [] toHeader(){
            return new String [] {
                "nombre", "cant", "precio", "subtotal"
            };
        }
     
     public  Object [][] toCuerpo(){
         Object [][] rows = new Object[tablas.size()][4];
         int i=0;
         for (modelAvisoTable deta : tablas) {
             rows[i++] = deta.toRow();
          }
            return rows;
        }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblAviso;
    private javax.swing.JTable tblBoleta;
    private javax.swing.JTable tblPedido;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtIgv;
    private javax.swing.JTextField txtRuc;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
